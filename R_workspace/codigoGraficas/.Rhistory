library(plotly)
install.packages(plotly)
install.packages("plotly")
library(plotly)
library(ggplot2)
library(stats)
library(graphics)
library(plotly)
source('~/MasterUPM/SoftComputing/practica1/practica-soft-computing/R_workspace/codigoGraficas/prueba_graficos1.R')
plot_ly(data, x = ~x, y = ~random_y, type = 'scatter', mode = 'lines')
source('~/MasterUPM/SoftComputing/practica1/practica-soft-computing/R_workspace/codigoGraficas/prueba_graficos1.R')
library(plotly)
library(stats)
library(ggplot2)
library(graphics)
x <- c(1:100)
random_y <- rnorm(100, mean = 0)
data <- data.frame(x, random_y)
pruebaGrafico1 = plot_ly(data, x = ~x, y = ~random_y, type = 'scatter', mode = 'lines')
plot_ly(data, x = ~x, y = ~random_y, type = 'scatter', mode = 'lines')
datos_Tabu = read.csv("BerlinSolutions2.csv", header = TRUE)
View(datos_Tabu)
library(plotly)
library(stats)
library(ggplot2)
library(graphics)
pruebaGrafico1 = plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'lines')
pruebaGrafico1 = plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'lines')
plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'lines')
pruebaGrafico1 = plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'marks')
pruebaGrafico1 = plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'markers')
pruebaGrafico1 = plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'markers')
datos_Tabu = read.csv("BerlinSolutions2.csv", header = TRUE)
plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'markers')
help(plot_ly)
install.packages(rrefine)
install.packages("rrefine")
library("rrefine")
help(rrefine)
help("rrefine")
help("refine_metadata")
refine_check()
help(refine_check
)
refine_check()
rrefine::refine_check()
refine_path()
max(datos_Tabu$maxTabuCount)
datos_TabuNormalizados = datos_Tabu[, datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)]
datos_Tabu[, datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)]
datos_Tabu[, datos_Tabu$maxIterations]
View(datos_Tabu)
datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)
datos_TabuOrdenEjecucion = datos_tabu[order(datos_Tabu[,6])]
datos_TabuOrdenEjecucion = datos_Tabu[order(datos_Tabu[,6])]
datos_TabuOrdenEjecucion = datos_Tabu[order(datos_Tabu[,5])]
datos_TabuOrdenEjecucion = datos_Tabu[order(datos_Tabu[,datos_Tabu$executionTime])]
View(datos_TabuOrdenEjecucion)
View(datos_TabuOrdenEjecucion)
datos_TabuOrdenEjecucion = datos_Tabu[order(datos_Tabu[,datos_Tabu$executionTime]), ]
datos_TabuOrdenEjecucion = datos_Tabu[with(datos_Tabu, order(datos_Tabu$executionTime)), ]
View(datos_TabuOrdenEjecucion)
plot_ly(datos_Tabu, x = datos_Tabu$executionTime, y = datos_Tabu$solution, type = 'scatter', mode = 'lines')
plot_ly(datos_TabuOrdenEjecucion, x = datos_TabuOrdenEjecucion$executionTime, y = datos_TabuOrdenEjecucion$solution, type = 'scatter', mode = 'lines')
plot_ly(datos_TabuOrdenEjecucion, x = datos_TabuOrdenEjecucion$executionTime, y = datos_TabuOrdenEjecucion$solution, type = 'scatter+lines', mode = 'lines')
plot_ly(datos_TabuOrdenEjecucion, x = datos_TabuOrdenEjecucion$executionTime, y = datos_TabuOrdenEjecucion$solution, type = 'scatter', mode = 'lines+markes')
plot_ly(datos_TabuOrdenEjecucion, x = datos_TabuOrdenEjecucion$executionTime, y = datos_TabuOrdenEjecucion$solution, type = 'scatter', mode = 'lines+markers')
help(add_trace)
datos_TabuNormalizados = datos_Tabu[, datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)]
datos_TabuNormalizados = datos_Tabu[with(datos_Tabu, datos_Tabu$maxIterations/max(datos_Tabu$maxIterations), ]
datos_TabuNormalizados = datos_Tabu[with(datos_Tabu, datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)), ]
View(datos_TabuNormalizados)
datos_Tabu$maxIterations/max(datos_Tabu$maxIterations)
datos_TabuNormalizados <-
datos_Tabu
datos_TabuNormalizados[, datos_TabuNormalizados$maxIterations]
datos_TabuNormalizados[, 1]
datos_TabuNormalizados[, 1] <- datos_TabuNormalizados$maxIterations/max(datos_TabuNormalizados$maxIterations)
datos_TabuNormalizados <- datos_Tabu
View(datos_TabuNormalizados)
datos_TabuNormalizados[, 1] <- datos_TabuNormalizados[, 1]/max(datos_TabuNormalizados[, 1])
View(datos_TabuNormalizados)
for(i in 1:length(datos_TabuNormalizados)){
datos_TabuNormalizados[, 1] <- datos_TabuNormalizados[, 1]/max(datos_TabuNormalizados[, 1])
}
View(datos_TabuNormalizados)
datos_TabuNormalizados <- datos_Tabu
View(datos_TabuNormalizados)
for(i in 1:length(datos_TabuNormalizados)){
datos_TabuNormalizados[, i] <- datos_TabuNormalizados[, i]/max(datos_TabuNormalizados[, i])
}
View(datos_TabuNormalizados)
pruebaGrafico1 <- plot_ly(datos_TabuNormalizados, x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'lines+markers')
plot_ly(datos_TabuNormalizados, x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'lines+markers')
help(order)
datos_TabuEnOrden <- datos_TabuNormalizados[with(datos_TabuNormalizados, order(datos_TabuNormalizados[,1])), ]
View(datos_TabuEnOrden)
datos_TabuEnOrden <- datos_TabuNormalizados[with(datos_TabuNormalizados, order(datos_TabuNormalizados[,-1])), ]
datos_TabuEnOrden <- datos_TabuNormalizados[with(datos_TabuNormalizados, order(datos_TabuNormalizados[,1])), ]
datos_Tabu = read.csv("BerlinSolutions2.csv", header = TRUE)
View(datos_Tabu)
datos_TabuNormalizados <- datos_Tabu
View(datos_TabuNormalizados)
for(i in 1:length(datos_TabuNormalizados)){
datos_TabuNormalizados[, i] <- datos_TabuNormalizados[, i]/max(datos_TabuNormalizados[, i])
}
plot_ly(datos_TabuNormalizados, x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'markers')
add_trace(x = datos_TabuNormalizados$maxIterations)
help(plot_ly)
help(add_trace)
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'markers')
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$solution, name = 'solution', type = 'scatter', mode = 'markers')
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$solution, type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$solution, name = 'solution', type = 'scatter', mode = 'markers')
min(datos_TabuNormalizados$efficacy)
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c('circle','x','o'),
color = I('black'), marker = list(size = 10))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c(1:3),
color = I('black'), marker = list(size = 10))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c(5:6),
color = I('black'), marker = list(size = 10))
pruebaPlot2 <- plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers')
pruebaPlot2 <- add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[2,], name = 'fila2', type = 'scatter', mode = 'markers')
pruebaPlot2 <- add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[3, ], name = 'fila3', type = 'scatter', mode = 'markers')
pruebaPlot2 <- add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[4, ], name = 'fila4', type = 'scatter', mode = 'markers')
pruebaPlot2 <- plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers')
pruebaPlot2 <- add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[2,], name = 'fila2', type = 'scatter', mode = 'markers')
pruebaPlot2 <- add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[3, ], name = 'fila3', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot2, data = datos_TabuNormalizados, x = datos_TabuNormalizados[4, ], name = 'fila4', type = 'scatter', mode = 'markers')
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
library(stats)
library(ggplot2)
library(graphics)
library(plotly)
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbol = c(1))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbol = c(2))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbol = c(6))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbol = c(1:6))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbols = c(1))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbols = c(2))
plot_ly(datos_TabuNormalizados, name = 'fila1', x = datos_TabuNormalizados[1,], y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', color = I('black'), symbols = c(1:6))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c('circle','x','o'),
color = I('black'), marker = list(size = 10))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c(1:3),
color = I('black'), marker = list(size = 10))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c(1:4),
color = I('black'), marker = list(size = 10))
plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length, type = 'scatter',
mode = 'markers', symbol = ~Species, symbols = c(1:12),
color = I('black'), marker = list(size = 10))
datos_TabuNormalizados[, "indice"] <- c(1:12)
plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', symbol = datos_TabuNormalizados$indice)
plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', symbol = datos_TabuNormalizados$indice, symbols = c(1:12))
pruebaPlot1 <- plot_ly(datos_TabuNormalizados, name = 'executionTime', x = datos_TabuNormalizados$executionTime, y = datos_TabuNormalizados$efficacy, type = 'scatter', mode = 'markers', symbol = datos_TabuNormalizados$indice, symbols = c(1:12))
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxIterations, name = 'maxIterations', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxTabuCount, name = 'maxIteramaxTabuCounttions', type = 'scatter', mode = 'markers')
pruebaPlot1 <- add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$maxCandidates, name = 'maxCandidates', type = 'scatter', mode = 'markers')
add_trace(p = pruebaPlot1, data = datos_TabuNormalizados, x = datos_TabuNormalizados$efficacy, name = 'efficacy', type = 'scatter', mode = 'markers')
help(geom_point)
abline(lm(datos_TabuNormalizados$efficacy,datos_TabuNormalizados$executionTime))
(lm(datos_TabuNormalizados$efficacy,datos_TabuNormalizados$executionTime)
lm(datos_TabuNormalizados$efficacy,datos_TabuNormalizados$executionTime)
abline(98.0054, 0.9528)
datos_Berlin = read.csv("BerlinSolutions2.csv", header = TRUE)
datos_att48 = read.csv("att48Solutions2.csv", header = TRUE)
datos_a280 = read.csv("a280Solutions2.csv", header = TRUE)
View(datos_Berlin)
datos_Berlin = read.csv("BerlinSolutions.csv", header = TRUE)
datos_att48 = read.csv("att48Solutions.csv", header = TRUE)
datos_a280 = read.csv("a280Solutions.csv", header = TRUE)
View(datos_Berlin)
pruebaGrafico1 <- plot_ly(datos_Berlin, x = datos_Berlin$executionTime, y = datos_Berlin$solution, type = 'scatter', mode = 'markers', color = 'red')
library(stats)
library(ggplot2)
library(graphics)
library(plotly)
plot_ly(datos_Berlin, x = datos_Berlin$executionTime, y = datos_Berlin$solution, type = 'scatter', mode = 'markers', color = 'red')
plot_ly(datos_Berlin, x = datos_Berlin$executionTime, y = datos_Berlin$solution, type = 'scatter', mode = 'markers', color = 'blue')
plot_ly(datos_Berlin, x = datos_Berlin$executionTime, y = datos_Berlin$solution, type = 'scatter', mode = 'markers', color = 'blue')
help(plot_ly)
plot_ly(datos_Berlin, x = datos_Berlin$executionTime, y = datos_Berlin$solution, type = 'scatter', mode = 'markers', color = I('blue'))
berlin_fase1 <- datos_berlin[1:12,]
berlin_fase2 <- datos_berlin[13:24,]
berlin_fase3 <- datos_berlin[25:36,]
berlin_fase4 <- datos_berlin[37:48,]
datos_berlin = read.csv("BerlinSolutions.csv", header = TRUE)
datos_att48 = read.csv("att48Solutions.csv", header = TRUE)
datos_a280 = read.csv("a280Solutions.csv", header = TRUE)
berlin_fase1 <- datos_berlin[1:12,]
berlin_fase2 <- datos_berlin[13:24,]
berlin_fase3 <- datos_berlin[25:36,]
berlin_fase4 <- datos_berlin[37:48,]
View(berlin_fase1)
View(berlin_fase2)
View(berlin_fase3)
View(berlin_fase4)
plot_berlin <- plot_ly(berlin_fase1, x = berlin_fase1$executionTime, y = berlin_fase1$solution, type = 'scatter', name ='estrategia 1', mode = 'markers', color = I('blue'))
add_trace(p = plot_berlin, data = berlin_fase2, x = berlin_fase2$executionTime, y = berlin_fase2$solution, name = 'estrategia 2', type = 'scatter', mode = 'markers', color = I('red'))
plot_berlin <- plot_ly(berlin_fase1, x = berlin_fase1$executionTime, y = berlin_fase1$solution, type = 'scatter', name ='estrategia 1', mode = 'markers', color = I('red'))
plot_berlin <- add_trace(p = plot_berlin, data = berlin_fase2, x = berlin_fase2$executionTime, y = berlin_fase2$solution, name = 'estrategia 2', type = 'scatter', mode = 'markers', color = I('pink'))
plot_berlin <- add_trace(p = plot_berlin, data = berlin_fase3, x = berlin_fase3$executionTime, y = berlin_fase3$solution, name = 'estrategia 3', type = 'scatter', mode = 'markers', color = I('purple'))
add_trace(p = plot_berlin, data = berlin_fase4, x = berlin_fase4$executionTime, y = berlin_fase4$solution, name = 'estrategia 4', type = 'scatter', mode = 'markers', color = I('blue'))
View(datos_att48)
att48_fase1 <- datos_att48[1:12,]
att48_fase2 <- datos_att48[13:24,]
att48_fase3 <- datos_att48[25:36,]
att48_fase4 <- datos_att48[37:48,]
plot_att48 <- plot_ly(att48_fase1, x = att48_fase1$executionTime, y = att48_fase1$solution, type = 'scatter', name ='estrategia 1', mode = 'markers', color = I('red'))
plot_att48 <- add_trace(p = plot_att48, data = att48_fase2, x = att48_fase2$executionTime, y = att48_fase2$solution, name = 'estrategia 2', type = 'scatter', mode = 'markers', color = I('pink'))
plot_att48 <- add_trace(p = plot_att48, data = att48_fase3, x = att48_fase3$executionTime, y = att48_fase3$solution, name = 'estrategia 3', type = 'scatter', mode = 'markers', color = I('purple'))
add_trace(p = plot_att48, data = att48_fase4, x = att48_fase4$executionTime, y = att48_fase4$solution, name = 'estrategia 4', type = 'scatter', mode = 'markers', color = I('blue'))
a280_fase1 <- datos_a280[1:12,]
a280_fase2 <- datos_a280[13:24,]
a280_fase3 <- datos_a280[25:36,]
a280_fase4 <- datos_a280[37:48,]
plot_a280 <- plot_ly(a280_fase1, x = a280_fase1$executionTime, y = a280_fase1$solution, type = 'scatter', name ='estrategia 1', mode = 'markers', color = I('red'))
plot_a280 <- add_trace(p = plot_a280, data = a280_fase2, x = a280_fase2$executionTime, y = a280_fase2$solution, name = 'estrategia 2', type = 'scatter', mode = 'markers', color = I('pink'))
plot_a280 <- add_trace(p = plot_a280, data = a280_fase3, x = a280_fase3$executionTime, y = a280_fase3$solution, name = 'estrategia 3', type = 'scatter', mode = 'markers', color = I('purple'))
add_trace(p = plot_att48, data = a280_fase4, x = a280_fase4$executionTime, y = a280_fase4$solution, name = 'estrategia 4', type = 'scatter', mode = 'markers', color = I('blue'))
View(datos_a280)
